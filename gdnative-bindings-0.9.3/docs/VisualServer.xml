<?xml version="1.0" encoding="UTF-8" ?>
<class name="VisualServer" inherits="Object" version="3.3">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="black_bars_set_images">
			<return type="void" />
			<argument index="0" name="left" type="RID" />
			<argument index="1" name="top" type="RID" />
			<argument index="2" name="right" type="RID" />
			<argument index="3" name="bottom" type="RID" />
			<description>
			</description>
		</method>
		<method name="black_bars_set_margins">
			<return type="void" />
			<argument index="0" name="left" type="int" />
			<argument index="1" name="top" type="int" />
			<argument index="2" name="right" type="int" />
			<argument index="3" name="bottom" type="int" />
			<description>
			</description>
		</method>
		<method name="camera_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="camera_set_cull_mask">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="layers" type="int" />
			<description>
			</description>
		</method>
		<method name="camera_set_environment">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="env" type="RID" />
			<description>
			</description>
		</method>
		<method name="camera_set_frustum">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="size" type="float" />
			<argument index="2" name="offset" type="Vector2" />
			<argument index="3" name="z_near" type="float" />
			<argument index="4" name="z_far" type="float" />
			<description>
			</description>
		</method>
		<method name="camera_set_orthogonal">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="size" type="float" />
			<argument index="2" name="z_near" type="float" />
			<argument index="3" name="z_far" type="float" />
			<description>
			</description>
		</method>
		<method name="camera_set_perspective">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="fovy_degrees" type="float" />
			<argument index="2" name="z_near" type="float" />
			<argument index="3" name="z_far" type="float" />
			<description>
			</description>
		</method>
		<method name="camera_set_transform">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="transform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="camera_set_use_vertical_aspect">
			<return type="void" />
			<argument index="0" name="camera" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_circle">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="pos" type="Vector2" />
			<argument index="2" name="radius" type="float" />
			<argument index="3" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_clip_ignore">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="ignore" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_line">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="from" type="Vector2" />
			<argument index="2" name="to" type="Vector2" />
			<argument index="3" name="color" type="Color" />
			<argument index="4" name="width" type="float" default="1.0" />
			<argument index="5" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_mesh">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="mesh" type="RID" />
			<argument index="2" name="transform" type="Transform2D" default="Transform2D( 1, 0, 0, 1, 0, 0 )" />
			<argument index="3" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="4" name="texture" type="RID" />
			<argument index="5" name="normal_map" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_multimesh">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="mesh" type="RID" />
			<argument index="2" name="texture" type="RID" />
			<argument index="3" name="normal_map" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_nine_patch">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="rect" type="Rect2" />
			<argument index="2" name="source" type="Rect2" />
			<argument index="3" name="texture" type="RID" />
			<argument index="4" name="topleft" type="Vector2" />
			<argument index="5" name="bottomright" type="Vector2" />
			<argument index="6" name="x_axis_mode" type="int" enum="VisualServer.NinePatchAxisMode" default="0" />
			<argument index="7" name="y_axis_mode" type="int" enum="VisualServer.NinePatchAxisMode" default="0" />
			<argument index="8" name="draw_center" type="bool" default="true" />
			<argument index="9" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="10" name="normal_map" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_particles">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="particles" type="RID" />
			<argument index="2" name="texture" type="RID" />
			<argument index="3" name="normal_map" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_polygon">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="points" type="PoolVector2Array" />
			<argument index="2" name="colors" type="PoolColorArray" />
			<argument index="3" name="uvs" type="PoolVector2Array" default="PoolVector2Array(  )" />
			<argument index="4" name="texture" type="RID" />
			<argument index="5" name="normal_map" type="RID" />
			<argument index="6" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_polyline">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="points" type="PoolVector2Array" />
			<argument index="2" name="colors" type="PoolColorArray" />
			<argument index="3" name="width" type="float" default="1.0" />
			<argument index="4" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_primitive">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="points" type="PoolVector2Array" />
			<argument index="2" name="colors" type="PoolColorArray" />
			<argument index="3" name="uvs" type="PoolVector2Array" />
			<argument index="4" name="texture" type="RID" />
			<argument index="5" name="width" type="float" default="1.0" />
			<argument index="6" name="normal_map" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_rect">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="rect" type="Rect2" />
			<argument index="2" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_set_transform">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_texture_rect">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="rect" type="Rect2" />
			<argument index="2" name="texture" type="RID" />
			<argument index="3" name="tile" type="bool" default="false" />
			<argument index="4" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="5" name="transpose" type="bool" default="false" />
			<argument index="6" name="normal_map" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_texture_rect_region">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="rect" type="Rect2" />
			<argument index="2" name="texture" type="RID" />
			<argument index="3" name="src_rect" type="Rect2" />
			<argument index="4" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="5" name="transpose" type="bool" default="false" />
			<argument index="6" name="normal_map" type="RID" />
			<argument index="7" name="clip_uv" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="canvas_item_add_triangle_array">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="indices" type="PoolIntArray" />
			<argument index="2" name="points" type="PoolVector2Array" />
			<argument index="3" name="colors" type="PoolColorArray" />
			<argument index="4" name="uvs" type="PoolVector2Array" default="PoolVector2Array(  )" />
			<argument index="5" name="bones" type="PoolIntArray" default="PoolIntArray(  )" />
			<argument index="6" name="weights" type="PoolRealArray" default="PoolRealArray(  )" />
			<argument index="7" name="texture" type="RID" />
			<argument index="8" name="count" type="int" default="-1" />
			<argument index="9" name="normal_map" type="RID" />
			<argument index="10" name="antialiased" type="bool" default="false" />
			<argument index="11" name="antialiasing_use_indices" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="canvas_item_clear">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_clip">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="clip" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_copy_to_backbuffer">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<argument index="2" name="rect" type="Rect2" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_custom_rect">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="use_custom_rect" type="bool" />
			<argument index="2" name="rect" type="Rect2" default="Rect2( 0, 0, 0, 0 )" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_distance_field_mode">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_draw_behind_parent">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_draw_index">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_light_mask">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="mask" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_material">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="material" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_modulate">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_parent">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="parent" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_self_modulate">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_sort_children_by_y">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_transform">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_use_parent_material">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_visible">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="visible" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_z_as_relative_to_parent">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_item_set_z_index">
			<return type="void" />
			<argument index="0" name="item" type="RID" />
			<argument index="1" name="z_index" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_light_attach_to_canvas">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="canvas" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_light_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_light_occluder_attach_to_canvas">
			<return type="void" />
			<argument index="0" name="occluder" type="RID" />
			<argument index="1" name="canvas" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_light_occluder_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_light_occluder_set_enabled">
			<return type="void" />
			<argument index="0" name="occluder" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_light_occluder_set_light_mask">
			<return type="void" />
			<argument index="0" name="occluder" type="RID" />
			<argument index="1" name="mask" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_light_occluder_set_polygon">
			<return type="void" />
			<argument index="0" name="occluder" type="RID" />
			<argument index="1" name="polygon" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_light_occluder_set_transform">
			<return type="void" />
			<argument index="0" name="occluder" type="RID" />
			<argument index="1" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_color">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_enabled">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_energy">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="energy" type="float" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_height">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="height" type="float" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_item_cull_mask">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="mask" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_item_shadow_cull_mask">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="mask" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_layer_range">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="min_layer" type="int" />
			<argument index="2" name="max_layer" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_mode">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="mode" type="int" enum="VisualServer.CanvasLightMode" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_scale">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="scale" type="float" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_shadow_buffer_size">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="size" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_shadow_color">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_shadow_enabled">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_shadow_filter">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="filter" type="int" enum="VisualServer.CanvasLightShadowFilter" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_shadow_gradient_length">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="length" type="float" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_shadow_smooth">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="smooth" type="float" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_texture">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_texture_offset">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="offset" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_transform">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="canvas_light_set_z_range">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="min_z" type="int" />
			<argument index="2" name="max_z" type="int" />
			<description>
			</description>
		</method>
		<method name="canvas_occluder_polygon_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="canvas_occluder_polygon_set_cull_mode">
			<return type="void" />
			<argument index="0" name="occluder_polygon" type="RID" />
			<argument index="1" name="mode" type="int" enum="VisualServer.CanvasOccluderPolygonCullMode" />
			<description>
			</description>
		</method>
		<method name="canvas_occluder_polygon_set_shape">
			<return type="void" />
			<argument index="0" name="occluder_polygon" type="RID" />
			<argument index="1" name="shape" type="PoolVector2Array" />
			<argument index="2" name="closed" type="bool" />
			<description>
			</description>
		</method>
		<method name="canvas_occluder_polygon_set_shape_as_lines">
			<return type="void" />
			<argument index="0" name="occluder_polygon" type="RID" />
			<argument index="1" name="shape" type="PoolVector2Array" />
			<description>
			</description>
		</method>
		<method name="canvas_set_item_mirroring">
			<return type="void" />
			<argument index="0" name="canvas" type="RID" />
			<argument index="1" name="item" type="RID" />
			<argument index="2" name="mirroring" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="canvas_set_modulate">
			<return type="void" />
			<argument index="0" name="canvas" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="directional_light_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="draw">
			<return type="void" />
			<argument index="0" name="swap_buffers" type="bool" default="true" />
			<argument index="1" name="frame_step" type="float" default="0.0" />
			<description>
			</description>
		</method>
		<method name="environment_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="environment_set_adjustment">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="brightness" type="float" />
			<argument index="3" name="contrast" type="float" />
			<argument index="4" name="saturation" type="float" />
			<argument index="5" name="ramp" type="RID" />
			<description>
			</description>
		</method>
		<method name="environment_set_ambient_light">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="energy" type="float" default="1.0" />
			<argument index="3" name="sky_contibution" type="float" default="0.0" />
			<description>
			</description>
		</method>
		<method name="environment_set_background">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="bg" type="int" enum="VisualServer.EnvironmentBG" />
			<description>
			</description>
		</method>
		<method name="environment_set_bg_color">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="environment_set_bg_energy">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="energy" type="float" />
			<description>
			</description>
		</method>
		<method name="environment_set_canvas_max_layer">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="max_layer" type="int" />
			<description>
			</description>
		</method>
		<method name="environment_set_dof_blur_far">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="distance" type="float" />
			<argument index="3" name="transition" type="float" />
			<argument index="4" name="far_amount" type="float" />
			<argument index="5" name="quality" type="int" enum="VisualServer.EnvironmentDOFBlurQuality" />
			<description>
			</description>
		</method>
		<method name="environment_set_dof_blur_near">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="distance" type="float" />
			<argument index="3" name="transition" type="float" />
			<argument index="4" name="far_amount" type="float" />
			<argument index="5" name="quality" type="int" enum="VisualServer.EnvironmentDOFBlurQuality" />
			<description>
			</description>
		</method>
		<method name="environment_set_fog">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="color" type="Color" />
			<argument index="3" name="sun_color" type="Color" />
			<argument index="4" name="sun_amount" type="float" />
			<description>
			</description>
		</method>
		<method name="environment_set_fog_depth">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="depth_begin" type="float" />
			<argument index="3" name="depth_end" type="float" />
			<argument index="4" name="depth_curve" type="float" />
			<argument index="5" name="transmit" type="bool" />
			<argument index="6" name="transmit_curve" type="float" />
			<description>
			</description>
		</method>
		<method name="environment_set_fog_height">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="min_height" type="float" />
			<argument index="3" name="max_height" type="float" />
			<argument index="4" name="height_curve" type="float" />
			<description>
			</description>
		</method>
		<method name="environment_set_glow">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="level_flags" type="int" />
			<argument index="3" name="intensity" type="float" />
			<argument index="4" name="strength" type="float" />
			<argument index="5" name="bloom_threshold" type="float" />
			<argument index="6" name="blend_mode" type="int" enum="VisualServer.EnvironmentGlowBlendMode" />
			<argument index="7" name="hdr_bleed_threshold" type="float" />
			<argument index="8" name="hdr_bleed_scale" type="float" />
			<argument index="9" name="hdr_luminance_cap" type="float" />
			<argument index="10" name="bicubic_upscale" type="bool" />
			<description>
			</description>
		</method>
		<method name="environment_set_sky">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="sky" type="RID" />
			<description>
			</description>
		</method>
		<method name="environment_set_sky_custom_fov">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="scale" type="float" />
			<description>
			</description>
		</method>
		<method name="environment_set_sky_orientation">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="orientation" type="Basis" />
			<description>
			</description>
		</method>
		<method name="environment_set_ssao">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="radius" type="float" />
			<argument index="3" name="intensity" type="float" />
			<argument index="4" name="radius2" type="float" />
			<argument index="5" name="intensity2" type="float" />
			<argument index="6" name="bias" type="float" />
			<argument index="7" name="light_affect" type="float" />
			<argument index="8" name="ao_channel_affect" type="float" />
			<argument index="9" name="color" type="Color" />
			<argument index="10" name="quality" type="int" enum="VisualServer.EnvironmentSSAOQuality" />
			<argument index="11" name="blur" type="int" enum="VisualServer.EnvironmentSSAOBlur" />
			<argument index="12" name="bilateral_sharpness" type="float" />
			<description>
			</description>
		</method>
		<method name="environment_set_ssr">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<argument index="2" name="max_steps" type="int" />
			<argument index="3" name="fade_in" type="float" />
			<argument index="4" name="fade_out" type="float" />
			<argument index="5" name="depth_tolerance" type="float" />
			<argument index="6" name="roughness" type="bool" />
			<description>
			</description>
		</method>
		<method name="environment_set_tonemap">
			<return type="void" />
			<argument index="0" name="env" type="RID" />
			<argument index="1" name="tone_mapper" type="int" enum="VisualServer.EnvironmentToneMapper" />
			<argument index="2" name="exposure" type="float" />
			<argument index="3" name="white" type="float" />
			<argument index="4" name="auto_exposure" type="bool" />
			<argument index="5" name="min_luminance" type="float" />
			<argument index="6" name="max_luminance" type="float" />
			<argument index="7" name="auto_exp_speed" type="float" />
			<argument index="8" name="auto_exp_grey" type="float" />
			<description>
			</description>
		</method>
		<method name="finish">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="force_draw">
			<return type="void" />
			<argument index="0" name="swap_buffers" type="bool" default="true" />
			<argument index="1" name="frame_step" type="float" default="0.0" />
			<description>
			</description>
		</method>
		<method name="force_sync">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="free_rid">
			<return type="void" />
			<argument index="0" name="rid" type="RID" />
			<description>
			</description>
		</method>
		<method name="get_render_info">
			<return type="int" />
			<argument index="0" name="info" type="int" enum="VisualServer.RenderInfo" />
			<description>
			</description>
		</method>
		<method name="get_test_cube">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="get_test_texture">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="get_video_adapter_name" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_video_adapter_vendor" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_white_texture">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_bias" qualifiers="const">
			<return type="float" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_bounds" qualifiers="const">
			<return type="AABB" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_cell_size" qualifiers="const">
			<return type="float" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_dynamic_data" qualifiers="const">
			<return type="PoolIntArray" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_dynamic_range" qualifiers="const">
			<return type="int" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_energy" qualifiers="const">
			<return type="float" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_normal_bias" qualifiers="const">
			<return type="float" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_propagation" qualifiers="const">
			<return type="float" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_get_to_cell_xform" qualifiers="const">
			<return type="Transform" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_is_compressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_is_interior" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="probe" type="RID" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_bias">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="bias" type="float" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_bounds">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="bounds" type="AABB" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_cell_size">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="range" type="float" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_compress">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_dynamic_data">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="data" type="PoolIntArray" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_dynamic_range">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="range" type="int" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_energy">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="energy" type="float" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_interior">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_normal_bias">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="bias" type="float" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_propagation">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="propagation" type="float" />
			<description>
			</description>
		</method>
		<method name="gi_probe_set_to_cell_xform">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="xform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="has_changed" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="has_feature" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="feature" type="int" enum="VisualServer.Features" />
			<description>
			</description>
		</method>
		<method name="has_os_feature" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="feature" type="String" />
			<description>
			</description>
		</method>
		<method name="immediate_begin">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="primitive" type="int" enum="VisualServer.PrimitiveType" />
			<argument index="2" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="immediate_clear">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<description>
			</description>
		</method>
		<method name="immediate_color">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="immediate_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="immediate_end">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<description>
			</description>
		</method>
		<method name="immediate_get_material" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="immediate" type="RID" />
			<description>
			</description>
		</method>
		<method name="immediate_normal">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="normal" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="immediate_set_material">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="material" type="RID" />
			<description>
			</description>
		</method>
		<method name="immediate_tangent">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="tangent" type="Plane" />
			<description>
			</description>
		</method>
		<method name="immediate_uv">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="tex_uv" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="immediate_uv2">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="tex_uv" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="immediate_vertex">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="vertex" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="immediate_vertex_2d">
			<return type="void" />
			<argument index="0" name="immediate" type="RID" />
			<argument index="1" name="vertex" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="init">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="instance_attach_object_instance_id">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="id" type="int" />
			<description>
			</description>
		</method>
		<method name="instance_attach_skeleton">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="skeleton" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_create2">
			<return type="RID" />
			<argument index="0" name="base" type="RID" />
			<argument index="1" name="scenario" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_geometry_set_as_instance_lod">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="as_lod_of_instance" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_geometry_set_cast_shadows_setting">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="shadow_casting_setting" type="int" enum="VisualServer.ShadowCastingSetting" />
			<description>
			</description>
		</method>
		<method name="instance_geometry_set_draw_range">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="min" type="float" />
			<argument index="2" name="max" type="float" />
			<argument index="3" name="min_margin" type="float" />
			<argument index="4" name="max_margin" type="float" />
			<description>
			</description>
		</method>
		<method name="instance_geometry_set_flag">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="flag" type="int" enum="VisualServer.InstanceFlags" />
			<argument index="2" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="instance_geometry_set_material_override">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="material" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_set_base">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="base" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_set_blend_shape_weight">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="shape" type="int" />
			<argument index="2" name="weight" type="float" />
			<description>
			</description>
		</method>
		<method name="instance_set_custom_aabb">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="aabb" type="AABB" />
			<description>
			</description>
		</method>
		<method name="instance_set_exterior">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="instance_set_extra_visibility_margin">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="margin" type="float" />
			<description>
			</description>
		</method>
		<method name="instance_set_layer_mask">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="mask" type="int" />
			<description>
			</description>
		</method>
		<method name="instance_set_scenario">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="scenario" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_set_surface_material">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="surface" type="int" />
			<argument index="2" name="material" type="RID" />
			<description>
			</description>
		</method>
		<method name="instance_set_transform">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="transform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="instance_set_use_lightmap">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="lightmap_instance" type="RID" />
			<argument index="2" name="lightmap" type="RID" />
			<argument index="3" name="lightmap_slice" type="int" default="-1" />
			<argument index="4" name="lightmap_uv_rect" type="Rect2" default="Rect2( 0, 0, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="instance_set_visible">
			<return type="void" />
			<argument index="0" name="instance" type="RID" />
			<argument index="1" name="visible" type="bool" />
			<description>
			</description>
		</method>
		<method name="instances_cull_aabb" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="aabb" type="AABB" />
			<argument index="1" name="scenario" type="RID" />
			<description>
			</description>
		</method>
		<method name="instances_cull_convex" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="convex" type="Array" />
			<argument index="1" name="scenario" type="RID" />
			<description>
			</description>
		</method>
		<method name="instances_cull_ray" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="from" type="Vector3" />
			<argument index="1" name="to" type="Vector3" />
			<argument index="2" name="scenario" type="RID" />
			<description>
			</description>
		</method>
		<method name="light_directional_set_blend_splits">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="light_directional_set_shadow_depth_range_mode">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="range_mode" type="int" enum="VisualServer.LightDirectionalShadowDepthRangeMode" />
			<description>
			</description>
		</method>
		<method name="light_directional_set_shadow_mode">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="mode" type="int" enum="VisualServer.LightDirectionalShadowMode" />
			<description>
			</description>
		</method>
		<method name="light_omni_set_shadow_detail">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="detail" type="int" enum="VisualServer.LightOmniShadowDetail" />
			<description>
			</description>
		</method>
		<method name="light_omni_set_shadow_mode">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="mode" type="int" enum="VisualServer.LightOmniShadowMode" />
			<description>
			</description>
		</method>
		<method name="light_set_bake_mode">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="bake_mode" type="int" enum="VisualServer.LightBakeMode" />
			<description>
			</description>
		</method>
		<method name="light_set_color">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="light_set_cull_mask">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="mask" type="int" />
			<description>
			</description>
		</method>
		<method name="light_set_negative">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="light_set_param">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="param" type="int" enum="VisualServer.LightParam" />
			<argument index="2" name="value" type="float" />
			<description>
			</description>
		</method>
		<method name="light_set_projector">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="light_set_reverse_cull_face_mode">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="light_set_shadow">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="light_set_shadow_color">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="light_set_use_gi">
			<return type="void" />
			<argument index="0" name="light" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_get_bounds" qualifiers="const">
			<return type="AABB" />
			<argument index="0" name="capture" type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_get_energy" qualifiers="const">
			<return type="float" />
			<argument index="0" name="capture" type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_get_octree" qualifiers="const">
			<return type="PoolByteArray" />
			<argument index="0" name="capture" type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_get_octree_cell_subdiv" qualifiers="const">
			<return type="int" />
			<argument index="0" name="capture" type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_get_octree_cell_transform" qualifiers="const">
			<return type="Transform" />
			<argument index="0" name="capture" type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_is_interior" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="capture" type="RID" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_set_bounds">
			<return type="void" />
			<argument index="0" name="capture" type="RID" />
			<argument index="1" name="bounds" type="AABB" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_set_energy">
			<return type="void" />
			<argument index="0" name="capture" type="RID" />
			<argument index="1" name="energy" type="float" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_set_interior">
			<return type="void" />
			<argument index="0" name="capture" type="RID" />
			<argument index="1" name="interior" type="bool" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_set_octree">
			<return type="void" />
			<argument index="0" name="capture" type="RID" />
			<argument index="1" name="octree" type="PoolByteArray" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_set_octree_cell_subdiv">
			<return type="void" />
			<argument index="0" name="capture" type="RID" />
			<argument index="1" name="subdiv" type="int" />
			<description>
			</description>
		</method>
		<method name="lightmap_capture_set_octree_cell_transform">
			<return type="void" />
			<argument index="0" name="capture" type="RID" />
			<argument index="1" name="xform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="make_sphere_mesh">
			<return type="RID" />
			<argument index="0" name="latitudes" type="int" />
			<argument index="1" name="longitudes" type="int" />
			<argument index="2" name="radius" type="float" />
			<description>
			</description>
		</method>
		<method name="material_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="material_get_param" qualifiers="const">
			<return type="Variant" />
			<argument index="0" name="material" type="RID" />
			<argument index="1" name="parameter" type="String" />
			<description>
			</description>
		</method>
		<method name="material_get_param_default" qualifiers="const">
			<return type="Variant" />
			<argument index="0" name="material" type="RID" />
			<argument index="1" name="parameter" type="String" />
			<description>
			</description>
		</method>
		<method name="material_get_shader" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="shader_material" type="RID" />
			<description>
			</description>
		</method>
		<method name="material_set_line_width">
			<return type="void" />
			<argument index="0" name="material" type="RID" />
			<argument index="1" name="width" type="float" />
			<description>
			</description>
		</method>
		<method name="material_set_next_pass">
			<return type="void" />
			<argument index="0" name="material" type="RID" />
			<argument index="1" name="next_material" type="RID" />
			<description>
			</description>
		</method>
		<method name="material_set_param">
			<return type="void" />
			<argument index="0" name="material" type="RID" />
			<argument index="1" name="parameter" type="String" />
			<argument index="2" name="value" type="Variant" />
			<description>
			</description>
		</method>
		<method name="material_set_render_priority">
			<return type="void" />
			<argument index="0" name="material" type="RID" />
			<argument index="1" name="priority" type="int" />
			<description>
			</description>
		</method>
		<method name="material_set_shader">
			<return type="void" />
			<argument index="0" name="shader_material" type="RID" />
			<argument index="1" name="shader" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_add_surface_from_arrays">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="primitive" type="int" enum="VisualServer.PrimitiveType" />
			<argument index="2" name="arrays" type="Array" />
			<argument index="3" name="blend_shapes" type="Array" default="[  ]" />
			<argument index="4" name="compress_format" type="int" default="97280" />
			<description>
			</description>
		</method>
		<method name="mesh_clear">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_get_blend_shape_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_get_blend_shape_mode" qualifiers="const">
			<return type="int" enum="VisualServer.BlendShapeMode" />
			<argument index="0" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_get_custom_aabb" qualifiers="const">
			<return type="AABB" />
			<argument index="0" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_get_surface_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_remove_surface">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_set_blend_shape_count">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="amount" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_set_blend_shape_mode">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="mode" type="int" enum="VisualServer.BlendShapeMode" />
			<description>
			</description>
		</method>
		<method name="mesh_set_custom_aabb">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="aabb" type="AABB" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_aabb" qualifiers="const">
			<return type="AABB" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_array" qualifiers="const">
			<return type="PoolByteArray" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_array_index_len" qualifiers="const">
			<return type="int" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_array_len" qualifiers="const">
			<return type="int" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_arrays" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_blend_shape_arrays" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_format" qualifiers="const">
			<return type="int" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_format_offset" qualifiers="const">
			<return type="int" />
			<argument index="0" name="format" type="int" />
			<argument index="1" name="vertex_len" type="int" />
			<argument index="2" name="index_len" type="int" />
			<argument index="3" name="array_index" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_format_stride" qualifiers="const">
			<return type="int" />
			<argument index="0" name="format" type="int" />
			<argument index="1" name="vertex_len" type="int" />
			<argument index="2" name="index_len" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_index_array" qualifiers="const">
			<return type="PoolByteArray" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_material" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_primitive_type" qualifiers="const">
			<return type="int" enum="VisualServer.PrimitiveType" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_get_skeleton_aabb" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_set_material">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<argument index="2" name="material" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_surface_update_region">
			<return type="void" />
			<argument index="0" name="mesh" type="RID" />
			<argument index="1" name="surface" type="int" />
			<argument index="2" name="offset" type="int" />
			<argument index="3" name="data" type="PoolByteArray" />
			<description>
			</description>
		</method>
		<method name="multimesh_allocate">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="instances" type="int" />
			<argument index="2" name="transform_format" type="int" enum="VisualServer.MultimeshTransformFormat" />
			<argument index="3" name="color_format" type="int" enum="VisualServer.MultimeshColorFormat" />
			<argument index="4" name="custom_data_format" type="int" enum="VisualServer.MultimeshCustomDataFormat" default="0" />
			<description>
			</description>
		</method>
		<method name="multimesh_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="multimesh_get_aabb" qualifiers="const">
			<return type="AABB" />
			<argument index="0" name="multimesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="multimesh_get_instance_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="multimesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="multimesh_get_mesh" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="multimesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="multimesh_get_visible_instances" qualifiers="const">
			<return type="int" />
			<argument index="0" name="multimesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_get_color" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_get_custom_data" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_get_transform" qualifiers="const">
			<return type="Transform" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_get_transform_2d" qualifiers="const">
			<return type="Transform2D" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_set_color">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<argument index="2" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_set_custom_data">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<argument index="2" name="custom_data" type="Color" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_set_transform">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<argument index="2" name="transform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="multimesh_instance_set_transform_2d">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="index" type="int" />
			<argument index="2" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="multimesh_set_as_bulk_array">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="array" type="PoolRealArray" />
			<description>
			</description>
		</method>
		<method name="multimesh_set_mesh">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="multimesh_set_visible_instances">
			<return type="void" />
			<argument index="0" name="multimesh" type="RID" />
			<argument index="1" name="visible" type="int" />
			<description>
			</description>
		</method>
		<method name="omni_light_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_get_current_aabb">
			<return type="AABB" />
			<argument index="0" name="particles" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_get_emitting">
			<return type="bool" />
			<argument index="0" name="particles" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_is_inactive">
			<return type="bool" />
			<argument index="0" name="particles" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_request_process">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_restart">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_set_amount">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="amount" type="int" />
			<description>
			</description>
		</method>
		<method name="particles_set_custom_aabb">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="aabb" type="AABB" />
			<description>
			</description>
		</method>
		<method name="particles_set_draw_order">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="order" type="int" enum="VisualServer.ParticlesDrawOrder" />
			<description>
			</description>
		</method>
		<method name="particles_set_draw_pass_mesh">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="pass" type="int" />
			<argument index="2" name="mesh" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_set_draw_passes">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="count" type="int" />
			<description>
			</description>
		</method>
		<method name="particles_set_emission_transform">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="transform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="particles_set_emitting">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="emitting" type="bool" />
			<description>
			</description>
		</method>
		<method name="particles_set_explosiveness_ratio">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="ratio" type="float" />
			<description>
			</description>
		</method>
		<method name="particles_set_fixed_fps">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="fps" type="int" />
			<description>
			</description>
		</method>
		<method name="particles_set_fractional_delta">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="particles_set_lifetime">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="lifetime" type="float" />
			<description>
			</description>
		</method>
		<method name="particles_set_one_shot">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="one_shot" type="bool" />
			<description>
			</description>
		</method>
		<method name="particles_set_pre_process_time">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="time" type="float" />
			<description>
			</description>
		</method>
		<method name="particles_set_process_material">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="material" type="RID" />
			<description>
			</description>
		</method>
		<method name="particles_set_randomness_ratio">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="ratio" type="float" />
			<description>
			</description>
		</method>
		<method name="particles_set_speed_scale">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="scale" type="float" />
			<description>
			</description>
		</method>
		<method name="particles_set_use_local_coordinates">
			<return type="void" />
			<argument index="0" name="particles" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_as_interior">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_cull_mask">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="layers" type="int" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_enable_box_projection">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_enable_shadows">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_extents">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="extents" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_intensity">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="intensity" type="float" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_interior_ambient">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_interior_ambient_energy">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="energy" type="float" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_interior_ambient_probe_contribution">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="contrib" type="float" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_max_distance">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="distance" type="float" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_origin_offset">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="offset" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="reflection_probe_set_update_mode">
			<return type="void" />
			<argument index="0" name="probe" type="RID" />
			<argument index="1" name="mode" type="int" enum="VisualServer.ReflectionProbeUpdateMode" />
			<description>
			</description>
		</method>
		<method name="request_frame_drawn_callback">
			<return type="void" />
			<argument index="0" name="where" type="Object" />
			<argument index="1" name="method" type="String" />
			<argument index="2" name="userdata" type="Variant" />
			<description>
			</description>
		</method>
		<method name="scenario_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="scenario_set_debug">
			<return type="void" />
			<argument index="0" name="scenario" type="RID" />
			<argument index="1" name="debug_mode" type="int" enum="VisualServer.ScenarioDebugMode" />
			<description>
			</description>
		</method>
		<method name="scenario_set_environment">
			<return type="void" />
			<argument index="0" name="scenario" type="RID" />
			<argument index="1" name="environment" type="RID" />
			<description>
			</description>
		</method>
		<method name="scenario_set_fallback_environment">
			<return type="void" />
			<argument index="0" name="scenario" type="RID" />
			<argument index="1" name="environment" type="RID" />
			<description>
			</description>
		</method>
		<method name="scenario_set_reflection_atlas_size">
			<return type="void" />
			<argument index="0" name="scenario" type="RID" />
			<argument index="1" name="size" type="int" />
			<argument index="2" name="subdiv" type="int" />
			<description>
			</description>
		</method>
		<method name="set_boot_image">
			<return type="void" />
			<argument index="0" name="image" type="Image" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="scale" type="bool" />
			<argument index="3" name="use_filter" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="set_debug_generate_wireframes">
			<return type="void" />
			<argument index="0" name="generate" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_default_clear_color">
			<return type="void" />
			<argument index="0" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="set_shader_time_scale">
			<return type="void" />
			<argument index="0" name="scale" type="float" />
			<description>
			</description>
		</method>
		<method name="shader_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="shader_get_code" qualifiers="const">
			<return type="String" />
			<argument index="0" name="shader" type="RID" />
			<description>
			</description>
		</method>
		<method name="shader_get_default_texture_param" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="shader" type="RID" />
			<argument index="1" name="name" type="String" />
			<description>
			</description>
		</method>
		<method name="shader_get_param_list" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="shader" type="RID" />
			<description>
			</description>
		</method>
		<method name="shader_set_code">
			<return type="void" />
			<argument index="0" name="shader" type="RID" />
			<argument index="1" name="code" type="String" />
			<description>
			</description>
		</method>
		<method name="shader_set_default_texture_param">
			<return type="void" />
			<argument index="0" name="shader" type="RID" />
			<argument index="1" name="name" type="String" />
			<argument index="2" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="skeleton_allocate">
			<return type="void" />
			<argument index="0" name="skeleton" type="RID" />
			<argument index="1" name="bones" type="int" />
			<argument index="2" name="is_2d_skeleton" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="skeleton_bone_get_transform" qualifiers="const">
			<return type="Transform" />
			<argument index="0" name="skeleton" type="RID" />
			<argument index="1" name="bone" type="int" />
			<description>
			</description>
		</method>
		<method name="skeleton_bone_get_transform_2d" qualifiers="const">
			<return type="Transform2D" />
			<argument index="0" name="skeleton" type="RID" />
			<argument index="1" name="bone" type="int" />
			<description>
			</description>
		</method>
		<method name="skeleton_bone_set_transform">
			<return type="void" />
			<argument index="0" name="skeleton" type="RID" />
			<argument index="1" name="bone" type="int" />
			<argument index="2" name="transform" type="Transform" />
			<description>
			</description>
		</method>
		<method name="skeleton_bone_set_transform_2d">
			<return type="void" />
			<argument index="0" name="skeleton" type="RID" />
			<argument index="1" name="bone" type="int" />
			<argument index="2" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="skeleton_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="skeleton_get_bone_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="skeleton" type="RID" />
			<description>
			</description>
		</method>
		<method name="sky_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="sky_set_texture">
			<return type="void" />
			<argument index="0" name="sky" type="RID" />
			<argument index="1" name="cube_map" type="RID" />
			<argument index="2" name="radiance_size" type="int" />
			<description>
			</description>
		</method>
		<method name="spot_light_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="sync">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="texture_allocate">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="width" type="int" />
			<argument index="2" name="height" type="int" />
			<argument index="3" name="depth_3d" type="int" />
			<argument index="4" name="format" type="int" enum="Image.Format" />
			<argument index="5" name="type" type="int" enum="VisualServer.TextureType" />
			<argument index="6" name="flags" type="int" default="7" />
			<description>
			</description>
		</method>
		<method name="texture_bind">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="number" type="int" />
			<description>
			</description>
		</method>
		<method name="texture_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_create_from_image">
			<return type="RID" />
			<argument index="0" name="image" type="Image" />
			<argument index="1" name="flags" type="int" default="7" />
			<description>
			</description>
		</method>
		<method name="texture_debug_usage">
			<return type="Array" />
			<description>
			</description>
		</method>
		<method name="texture_get_data" qualifiers="const">
			<return type="Image" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="cube_side" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="texture_get_depth" qualifiers="const">
			<return type="int" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_flags" qualifiers="const">
			<return type="int" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_format" qualifiers="const">
			<return type="int" enum="Image.Format" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_height" qualifiers="const">
			<return type="int" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_path" qualifiers="const">
			<return type="String" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_texid" qualifiers="const">
			<return type="int" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_type" qualifiers="const">
			<return type="int" enum="VisualServer.TextureType" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_get_width" qualifiers="const">
			<return type="int" />
			<argument index="0" name="texture" type="RID" />
			<description>
			</description>
		</method>
		<method name="texture_set_data">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="image" type="Image" />
			<argument index="2" name="layer" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="texture_set_data_partial">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="image" type="Image" />
			<argument index="2" name="src_x" type="int" />
			<argument index="3" name="src_y" type="int" />
			<argument index="4" name="src_w" type="int" />
			<argument index="5" name="src_h" type="int" />
			<argument index="6" name="dst_x" type="int" />
			<argument index="7" name="dst_y" type="int" />
			<argument index="8" name="dst_mip" type="int" />
			<argument index="9" name="layer" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="texture_set_flags">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="flags" type="int" />
			<description>
			</description>
		</method>
		<method name="texture_set_path">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="path" type="String" />
			<description>
			</description>
		</method>
		<method name="texture_set_shrink_all_x2_on_set_data">
			<return type="void" />
			<argument index="0" name="shrink" type="bool" />
			<description>
			</description>
		</method>
		<method name="texture_set_size_override">
			<return type="void" />
			<argument index="0" name="texture" type="RID" />
			<argument index="1" name="width" type="int" />
			<argument index="2" name="height" type="int" />
			<argument index="3" name="depth" type="int" />
			<description>
			</description>
		</method>
		<method name="textures_keep_original">
			<return type="void" />
			<argument index="0" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_attach_camera">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="camera" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_attach_canvas">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="canvas" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_attach_to_screen">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="rect" type="Rect2" default="Rect2( 0, 0, 0, 0 )" />
			<argument index="2" name="screen" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="viewport_create">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_detach">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_get_render_info">
			<return type="int" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="info" type="int" enum="VisualServer.ViewportRenderInfo" />
			<description>
			</description>
		</method>
		<method name="viewport_get_texture" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="viewport" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_remove_canvas">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="canvas" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_set_active">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="active" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_canvas_stacking">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="canvas" type="RID" />
			<argument index="2" name="layer" type="int" />
			<argument index="3" name="sublayer" type="int" />
			<description>
			</description>
		</method>
		<method name="viewport_set_canvas_transform">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="canvas" type="RID" />
			<argument index="2" name="offset" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="viewport_set_clear_mode">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="clear_mode" type="int" enum="VisualServer.ViewportClearMode" />
			<description>
			</description>
		</method>
		<method name="viewport_set_debug_draw">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="draw" type="int" enum="VisualServer.ViewportDebugDraw" />
			<description>
			</description>
		</method>
		<method name="viewport_set_disable_3d">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="disabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_disable_environment">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="disabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_global_canvas_transform">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="transform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="viewport_set_hdr">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_hide_canvas">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="hidden" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_hide_scenario">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="hidden" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_msaa">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="msaa" type="int" enum="VisualServer.ViewportMSAA" />
			<description>
			</description>
		</method>
		<method name="viewport_set_parent_viewport">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="parent_viewport" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_set_render_direct_to_screen">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_scenario">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="scenario" type="RID" />
			<description>
			</description>
		</method>
		<method name="viewport_set_shadow_atlas_quadrant_subdivision">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="quadrant" type="int" />
			<argument index="2" name="subdivision" type="int" />
			<description>
			</description>
		</method>
		<method name="viewport_set_shadow_atlas_size">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="size" type="int" />
			<description>
			</description>
		</method>
		<method name="viewport_set_size">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="width" type="int" />
			<argument index="2" name="height" type="int" />
			<description>
			</description>
		</method>
		<method name="viewport_set_transparent_background">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_update_mode">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="update_mode" type="int" enum="VisualServer.ViewportUpdateMode" />
			<description>
			</description>
		</method>
		<method name="viewport_set_usage">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="usage" type="int" enum="VisualServer.ViewportUsage" />
			<description>
			</description>
		</method>
		<method name="viewport_set_use_arvr">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="use_arvr" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_use_debanding">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="debanding" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_use_fxaa">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="fxaa" type="bool" />
			<description>
			</description>
		</method>
		<method name="viewport_set_vflip">
			<return type="void" />
			<argument index="0" name="viewport" type="RID" />
			<argument index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="render_loop_enabled" type="bool" setter="set_render_loop_enabled" getter="is_render_loop_enabled">
		</member>
	</members>
	<signals>
		<signal name="frame_post_draw">
			<description>
			</description>
		</signal>
		<signal name="frame_pre_draw">
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="NO_INDEX_ARRAY" value="-1">
		</constant>
		<constant name="ARRAY_WEIGHTS_SIZE" value="4">
		</constant>
		<constant name="CANVAS_ITEM_Z_MIN" value="-4096">
		</constant>
		<constant name="CANVAS_ITEM_Z_MAX" value="4096">
		</constant>
		<constant name="MAX_GLOW_LEVELS" value="7">
		</constant>
		<constant name="MAX_CURSORS" value="8">
		</constant>
		<constant name="MATERIAL_RENDER_PRIORITY_MIN" value="-128">
		</constant>
		<constant name="MATERIAL_RENDER_PRIORITY_MAX" value="127">
		</constant>
		<constant name="CUBEMAP_LEFT" value="0" enum="CubeMapSide">
		</constant>
		<constant name="CUBEMAP_RIGHT" value="1" enum="CubeMapSide">
		</constant>
		<constant name="CUBEMAP_BOTTOM" value="2" enum="CubeMapSide">
		</constant>
		<constant name="CUBEMAP_TOP" value="3" enum="CubeMapSide">
		</constant>
		<constant name="CUBEMAP_FRONT" value="4" enum="CubeMapSide">
		</constant>
		<constant name="CUBEMAP_BACK" value="5" enum="CubeMapSide">
		</constant>
		<constant name="TEXTURE_TYPE_2D" value="0" enum="TextureType">
		</constant>
		<constant name="TEXTURE_TYPE_CUBEMAP" value="2" enum="TextureType">
		</constant>
		<constant name="TEXTURE_TYPE_2D_ARRAY" value="3" enum="TextureType">
		</constant>
		<constant name="TEXTURE_TYPE_3D" value="4" enum="TextureType">
		</constant>
		<constant name="TEXTURE_FLAG_MIPMAPS" value="1" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAG_REPEAT" value="2" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAG_FILTER" value="4" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAG_ANISOTROPIC_FILTER" value="8" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAG_CONVERT_TO_LINEAR" value="16" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAG_MIRRORED_REPEAT" value="32" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAG_USED_FOR_STREAMING" value="2048" enum="TextureFlags">
		</constant>
		<constant name="TEXTURE_FLAGS_DEFAULT" value="7" enum="TextureFlags">
		</constant>
		<constant name="SHADER_SPATIAL" value="0" enum="ShaderMode">
		</constant>
		<constant name="SHADER_CANVAS_ITEM" value="1" enum="ShaderMode">
		</constant>
		<constant name="SHADER_PARTICLES" value="2" enum="ShaderMode">
		</constant>
		<constant name="SHADER_MAX" value="3" enum="ShaderMode">
		</constant>
		<constant name="ARRAY_VERTEX" value="0" enum="ArrayType">
		</constant>
		<constant name="ARRAY_NORMAL" value="1" enum="ArrayType">
		</constant>
		<constant name="ARRAY_TANGENT" value="2" enum="ArrayType">
		</constant>
		<constant name="ARRAY_COLOR" value="3" enum="ArrayType">
		</constant>
		<constant name="ARRAY_TEX_UV" value="4" enum="ArrayType">
		</constant>
		<constant name="ARRAY_TEX_UV2" value="5" enum="ArrayType">
		</constant>
		<constant name="ARRAY_BONES" value="6" enum="ArrayType">
		</constant>
		<constant name="ARRAY_WEIGHTS" value="7" enum="ArrayType">
		</constant>
		<constant name="ARRAY_INDEX" value="8" enum="ArrayType">
		</constant>
		<constant name="ARRAY_MAX" value="9" enum="ArrayType">
		</constant>
		<constant name="ARRAY_FORMAT_VERTEX" value="1" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_NORMAL" value="2" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_TANGENT" value="4" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_COLOR" value="8" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_TEX_UV" value="16" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_TEX_UV2" value="32" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_BONES" value="64" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_WEIGHTS" value="128" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FORMAT_INDEX" value="256" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_VERTEX" value="512" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_NORMAL" value="1024" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_TANGENT" value="2048" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_COLOR" value="4096" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_TEX_UV" value="8192" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_TEX_UV2" value="16384" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_BONES" value="32768" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_WEIGHTS" value="65536" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_INDEX" value="131072" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FLAG_USE_2D_VERTICES" value="262144" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_FLAG_USE_16_BIT_BONES" value="524288" enum="ArrayFormat">
		</constant>
		<constant name="ARRAY_COMPRESS_DEFAULT" value="97280" enum="ArrayFormat">
		</constant>
		<constant name="PRIMITIVE_POINTS" value="0" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_LINES" value="1" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_LINE_STRIP" value="2" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_LINE_LOOP" value="3" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_TRIANGLES" value="4" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_TRIANGLE_STRIP" value="5" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_TRIANGLE_FAN" value="6" enum="PrimitiveType">
		</constant>
		<constant name="PRIMITIVE_MAX" value="7" enum="PrimitiveType">
		</constant>
		<constant name="BLEND_SHAPE_MODE_NORMALIZED" value="0" enum="BlendShapeMode">
		</constant>
		<constant name="BLEND_SHAPE_MODE_RELATIVE" value="1" enum="BlendShapeMode">
		</constant>
		<constant name="LIGHT_DIRECTIONAL" value="0" enum="LightType">
		</constant>
		<constant name="LIGHT_OMNI" value="1" enum="LightType">
		</constant>
		<constant name="LIGHT_SPOT" value="2" enum="LightType">
		</constant>
		<constant name="LIGHT_PARAM_ENERGY" value="0" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SPECULAR" value="2" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_RANGE" value="3" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_ATTENUATION" value="4" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SPOT_ANGLE" value="5" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SPOT_ATTENUATION" value="6" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_CONTACT_SHADOW_SIZE" value="7" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_MAX_DISTANCE" value="8" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_SPLIT_1_OFFSET" value="9" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_SPLIT_2_OFFSET" value="10" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_SPLIT_3_OFFSET" value="11" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_NORMAL_BIAS" value="12" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_BIAS" value="13" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_SHADOW_BIAS_SPLIT_SCALE" value="14" enum="LightParam">
		</constant>
		<constant name="LIGHT_PARAM_MAX" value="15" enum="LightParam">
		</constant>
		<constant name="LIGHT_BAKE_DISABLED" value="0" enum="LightBakeMode">
		</constant>
		<constant name="LIGHT_BAKE_INDIRECT" value="1" enum="LightBakeMode">
		</constant>
		<constant name="LIGHT_BAKE_ALL" value="2" enum="LightBakeMode">
		</constant>
		<constant name="LIGHT_OMNI_SHADOW_DUAL_PARABOLOID" value="0" enum="LightOmniShadowMode">
		</constant>
		<constant name="LIGHT_OMNI_SHADOW_CUBE" value="1" enum="LightOmniShadowMode">
		</constant>
		<constant name="LIGHT_OMNI_SHADOW_DETAIL_VERTICAL" value="0" enum="LightOmniShadowDetail">
		</constant>
		<constant name="LIGHT_OMNI_SHADOW_DETAIL_HORIZONTAL" value="1" enum="LightOmniShadowDetail">
		</constant>
		<constant name="LIGHT_DIRECTIONAL_SHADOW_ORTHOGONAL" value="0" enum="LightDirectionalShadowMode">
		</constant>
		<constant name="LIGHT_DIRECTIONAL_SHADOW_PARALLEL_2_SPLITS" value="1" enum="LightDirectionalShadowMode">
		</constant>
		<constant name="LIGHT_DIRECTIONAL_SHADOW_PARALLEL_4_SPLITS" value="2" enum="LightDirectionalShadowMode">
		</constant>
		<constant name="LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_STABLE" value="0" enum="LightDirectionalShadowDepthRangeMode">
		</constant>
		<constant name="LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_OPTIMIZED" value="1" enum="LightDirectionalShadowDepthRangeMode">
		</constant>
		<constant name="VIEWPORT_UPDATE_DISABLED" value="0" enum="ViewportUpdateMode">
		</constant>
		<constant name="VIEWPORT_UPDATE_ONCE" value="1" enum="ViewportUpdateMode">
		</constant>
		<constant name="VIEWPORT_UPDATE_WHEN_VISIBLE" value="2" enum="ViewportUpdateMode">
		</constant>
		<constant name="VIEWPORT_UPDATE_ALWAYS" value="3" enum="ViewportUpdateMode">
		</constant>
		<constant name="VIEWPORT_CLEAR_ALWAYS" value="0" enum="ViewportClearMode">
		</constant>
		<constant name="VIEWPORT_CLEAR_NEVER" value="1" enum="ViewportClearMode">
		</constant>
		<constant name="VIEWPORT_CLEAR_ONLY_NEXT_FRAME" value="2" enum="ViewportClearMode">
		</constant>
		<constant name="VIEWPORT_MSAA_DISABLED" value="0" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_MSAA_2X" value="1" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_MSAA_4X" value="2" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_MSAA_8X" value="3" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_MSAA_16X" value="4" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_MSAA_EXT_2X" value="5" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_MSAA_EXT_4X" value="6" enum="ViewportMSAA">
		</constant>
		<constant name="VIEWPORT_USAGE_2D" value="0" enum="ViewportUsage">
		</constant>
		<constant name="VIEWPORT_USAGE_2D_NO_SAMPLING" value="1" enum="ViewportUsage">
		</constant>
		<constant name="VIEWPORT_USAGE_3D" value="2" enum="ViewportUsage">
		</constant>
		<constant name="VIEWPORT_USAGE_3D_NO_EFFECTS" value="3" enum="ViewportUsage">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_OBJECTS_IN_FRAME" value="0" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_VERTICES_IN_FRAME" value="1" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_MATERIAL_CHANGES_IN_FRAME" value="2" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_SHADER_CHANGES_IN_FRAME" value="3" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_SURFACE_CHANGES_IN_FRAME" value="4" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_DRAW_CALLS_IN_FRAME" value="5" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_2D_ITEMS_IN_FRAME" value="6" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_2D_DRAW_CALLS_IN_FRAME" value="7" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_RENDER_INFO_MAX" value="8" enum="ViewportRenderInfo">
		</constant>
		<constant name="VIEWPORT_DEBUG_DRAW_DISABLED" value="0" enum="ViewportDebugDraw">
		</constant>
		<constant name="VIEWPORT_DEBUG_DRAW_UNSHADED" value="1" enum="ViewportDebugDraw">
		</constant>
		<constant name="VIEWPORT_DEBUG_DRAW_OVERDRAW" value="2" enum="ViewportDebugDraw">
		</constant>
		<constant name="VIEWPORT_DEBUG_DRAW_WIREFRAME" value="3" enum="ViewportDebugDraw">
		</constant>
		<constant name="SCENARIO_DEBUG_DISABLED" value="0" enum="ScenarioDebugMode">
		</constant>
		<constant name="SCENARIO_DEBUG_WIREFRAME" value="1" enum="ScenarioDebugMode">
		</constant>
		<constant name="SCENARIO_DEBUG_OVERDRAW" value="2" enum="ScenarioDebugMode">
		</constant>
		<constant name="SCENARIO_DEBUG_SHADELESS" value="3" enum="ScenarioDebugMode">
		</constant>
		<constant name="INSTANCE_NONE" value="0" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_MESH" value="1" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_MULTIMESH" value="2" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_IMMEDIATE" value="3" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_PARTICLES" value="4" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_LIGHT" value="5" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_REFLECTION_PROBE" value="6" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_GI_PROBE" value="7" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_LIGHTMAP_CAPTURE" value="8" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_MAX" value="9" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_GEOMETRY_MASK" value="30" enum="InstanceType">
		</constant>
		<constant name="INSTANCE_FLAG_USE_BAKED_LIGHT" value="0" enum="InstanceFlags">
		</constant>
		<constant name="INSTANCE_FLAG_DRAW_NEXT_FRAME_IF_VISIBLE" value="1" enum="InstanceFlags">
		</constant>
		<constant name="INSTANCE_FLAG_MAX" value="2" enum="InstanceFlags">
		</constant>
		<constant name="SHADOW_CASTING_SETTING_OFF" value="0" enum="ShadowCastingSetting">
		</constant>
		<constant name="SHADOW_CASTING_SETTING_ON" value="1" enum="ShadowCastingSetting">
		</constant>
		<constant name="SHADOW_CASTING_SETTING_DOUBLE_SIDED" value="2" enum="ShadowCastingSetting">
		</constant>
		<constant name="SHADOW_CASTING_SETTING_SHADOWS_ONLY" value="3" enum="ShadowCastingSetting">
		</constant>
		<constant name="NINE_PATCH_STRETCH" value="0" enum="NinePatchAxisMode">
		</constant>
		<constant name="NINE_PATCH_TILE" value="1" enum="NinePatchAxisMode">
		</constant>
		<constant name="NINE_PATCH_TILE_FIT" value="2" enum="NinePatchAxisMode">
		</constant>
		<constant name="CANVAS_LIGHT_MODE_ADD" value="0" enum="CanvasLightMode">
		</constant>
		<constant name="CANVAS_LIGHT_MODE_SUB" value="1" enum="CanvasLightMode">
		</constant>
		<constant name="CANVAS_LIGHT_MODE_MIX" value="2" enum="CanvasLightMode">
		</constant>
		<constant name="CANVAS_LIGHT_MODE_MASK" value="3" enum="CanvasLightMode">
		</constant>
		<constant name="CANVAS_LIGHT_FILTER_NONE" value="0" enum="CanvasLightShadowFilter">
		</constant>
		<constant name="CANVAS_LIGHT_FILTER_PCF3" value="1" enum="CanvasLightShadowFilter">
		</constant>
		<constant name="CANVAS_LIGHT_FILTER_PCF5" value="2" enum="CanvasLightShadowFilter">
		</constant>
		<constant name="CANVAS_LIGHT_FILTER_PCF7" value="3" enum="CanvasLightShadowFilter">
		</constant>
		<constant name="CANVAS_LIGHT_FILTER_PCF9" value="4" enum="CanvasLightShadowFilter">
		</constant>
		<constant name="CANVAS_LIGHT_FILTER_PCF13" value="5" enum="CanvasLightShadowFilter">
		</constant>
		<constant name="CANVAS_OCCLUDER_POLYGON_CULL_DISABLED" value="0" enum="CanvasOccluderPolygonCullMode">
		</constant>
		<constant name="CANVAS_OCCLUDER_POLYGON_CULL_CLOCKWISE" value="1" enum="CanvasOccluderPolygonCullMode">
		</constant>
		<constant name="CANVAS_OCCLUDER_POLYGON_CULL_COUNTER_CLOCKWISE" value="2" enum="CanvasOccluderPolygonCullMode">
		</constant>
		<constant name="INFO_OBJECTS_IN_FRAME" value="0" enum="RenderInfo">
		</constant>
		<constant name="INFO_VERTICES_IN_FRAME" value="1" enum="RenderInfo">
		</constant>
		<constant name="INFO_MATERIAL_CHANGES_IN_FRAME" value="2" enum="RenderInfo">
		</constant>
		<constant name="INFO_SHADER_CHANGES_IN_FRAME" value="3" enum="RenderInfo">
		</constant>
		<constant name="INFO_SURFACE_CHANGES_IN_FRAME" value="4" enum="RenderInfo">
		</constant>
		<constant name="INFO_DRAW_CALLS_IN_FRAME" value="5" enum="RenderInfo">
		</constant>
		<constant name="INFO_2D_ITEMS_IN_FRAME" value="6" enum="RenderInfo">
		</constant>
		<constant name="INFO_2D_DRAW_CALLS_IN_FRAME" value="7" enum="RenderInfo">
		</constant>
		<constant name="INFO_USAGE_VIDEO_MEM_TOTAL" value="8" enum="RenderInfo">
		</constant>
		<constant name="INFO_VIDEO_MEM_USED" value="9" enum="RenderInfo">
		</constant>
		<constant name="INFO_TEXTURE_MEM_USED" value="10" enum="RenderInfo">
		</constant>
		<constant name="INFO_VERTEX_MEM_USED" value="11" enum="RenderInfo">
		</constant>
		<constant name="FEATURE_SHADERS" value="0" enum="Features">
		</constant>
		<constant name="FEATURE_MULTITHREADED" value="1" enum="Features">
		</constant>
		<constant name="MULTIMESH_TRANSFORM_2D" value="0" enum="MultimeshTransformFormat">
		</constant>
		<constant name="MULTIMESH_TRANSFORM_3D" value="1" enum="MultimeshTransformFormat">
		</constant>
		<constant name="MULTIMESH_COLOR_NONE" value="0" enum="MultimeshColorFormat">
		</constant>
		<constant name="MULTIMESH_COLOR_8BIT" value="1" enum="MultimeshColorFormat">
		</constant>
		<constant name="MULTIMESH_COLOR_FLOAT" value="2" enum="MultimeshColorFormat">
		</constant>
		<constant name="MULTIMESH_CUSTOM_DATA_NONE" value="0" enum="MultimeshCustomDataFormat">
		</constant>
		<constant name="MULTIMESH_CUSTOM_DATA_8BIT" value="1" enum="MultimeshCustomDataFormat">
		</constant>
		<constant name="MULTIMESH_CUSTOM_DATA_FLOAT" value="2" enum="MultimeshCustomDataFormat">
		</constant>
		<constant name="REFLECTION_PROBE_UPDATE_ONCE" value="0" enum="ReflectionProbeUpdateMode">
		</constant>
		<constant name="REFLECTION_PROBE_UPDATE_ALWAYS" value="1" enum="ReflectionProbeUpdateMode">
		</constant>
		<constant name="PARTICLES_DRAW_ORDER_INDEX" value="0" enum="ParticlesDrawOrder">
		</constant>
		<constant name="PARTICLES_DRAW_ORDER_LIFETIME" value="1" enum="ParticlesDrawOrder">
		</constant>
		<constant name="PARTICLES_DRAW_ORDER_VIEW_DEPTH" value="2" enum="ParticlesDrawOrder">
		</constant>
		<constant name="ENV_BG_CLEAR_COLOR" value="0" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_BG_COLOR" value="1" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_BG_SKY" value="2" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_BG_COLOR_SKY" value="3" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_BG_CANVAS" value="4" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_BG_KEEP" value="5" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_BG_MAX" value="7" enum="EnvironmentBG">
		</constant>
		<constant name="ENV_DOF_BLUR_QUALITY_LOW" value="0" enum="EnvironmentDOFBlurQuality">
		</constant>
		<constant name="ENV_DOF_BLUR_QUALITY_MEDIUM" value="1" enum="EnvironmentDOFBlurQuality">
		</constant>
		<constant name="ENV_DOF_BLUR_QUALITY_HIGH" value="2" enum="EnvironmentDOFBlurQuality">
		</constant>
		<constant name="GLOW_BLEND_MODE_ADDITIVE" value="0" enum="EnvironmentGlowBlendMode">
		</constant>
		<constant name="GLOW_BLEND_MODE_SCREEN" value="1" enum="EnvironmentGlowBlendMode">
		</constant>
		<constant name="GLOW_BLEND_MODE_SOFTLIGHT" value="2" enum="EnvironmentGlowBlendMode">
		</constant>
		<constant name="GLOW_BLEND_MODE_REPLACE" value="3" enum="EnvironmentGlowBlendMode">
		</constant>
		<constant name="ENV_TONE_MAPPER_LINEAR" value="0" enum="EnvironmentToneMapper">
		</constant>
		<constant name="ENV_TONE_MAPPER_REINHARD" value="1" enum="EnvironmentToneMapper">
		</constant>
		<constant name="ENV_TONE_MAPPER_FILMIC" value="2" enum="EnvironmentToneMapper">
		</constant>
		<constant name="ENV_TONE_MAPPER_ACES" value="3" enum="EnvironmentToneMapper">
		</constant>
		<constant name="ENV_SSAO_QUALITY_LOW" value="0" enum="EnvironmentSSAOQuality">
		</constant>
		<constant name="ENV_SSAO_QUALITY_MEDIUM" value="1" enum="EnvironmentSSAOQuality">
		</constant>
		<constant name="ENV_SSAO_QUALITY_HIGH" value="2" enum="EnvironmentSSAOQuality">
		</constant>
		<constant name="ENV_SSAO_BLUR_DISABLED" value="0" enum="EnvironmentSSAOBlur">
		</constant>
		<constant name="ENV_SSAO_BLUR_1x1" value="1" enum="EnvironmentSSAOBlur">
		</constant>
		<constant name="ENV_SSAO_BLUR_2x2" value="2" enum="EnvironmentSSAOBlur">
		</constant>
		<constant name="ENV_SSAO_BLUR_3x3" value="3" enum="EnvironmentSSAOBlur">
		</constant>
	</constants>
</class>
