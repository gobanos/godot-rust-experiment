<?xml version="1.0" encoding="UTF-8" ?>
<class name="Vector3" version="3.3">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="Vector3">
			<return type="Vector3" />
			<argument index="0" name="x" type="float" />
			<argument index="1" name="y" type="float" />
			<argument index="2" name="z" type="float" />
			<description>
			</description>
		</method>
		<method name="abs">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="angle_to">
			<return type="float" />
			<argument index="0" name="to" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="bounce">
			<return type="Vector3" />
			<argument index="0" name="n" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="ceil">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="cross">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="cubic_interpolate">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<argument index="1" name="pre_a" type="Vector3" />
			<argument index="2" name="post_b" type="Vector3" />
			<argument index="3" name="weight" type="float" />
			<description>
			</description>
		</method>
		<method name="direction_to">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="distance_squared_to">
			<return type="float" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="distance_to">
			<return type="float" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="dot">
			<return type="float" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="floor">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="inverse">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="is_equal_approx">
			<return type="bool" />
			<argument index="0" name="v" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="is_normalized">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="length">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="length_squared">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="linear_interpolate">
			<return type="Vector3" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="weight" type="float" />
			<description>
			</description>
		</method>
		<method name="max_axis">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="min_axis">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="move_toward">
			<return type="Vector3" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="delta" type="float" />
			<description>
			</description>
		</method>
		<method name="normalized">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="outer">
			<return type="Basis" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="posmod">
			<return type="Vector3" />
			<argument index="0" name="mod" type="float" />
			<description>
			</description>
		</method>
		<method name="posmodv">
			<return type="Vector3" />
			<argument index="0" name="modv" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="project">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="reflect">
			<return type="Vector3" />
			<argument index="0" name="n" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="rotated">
			<return type="Vector3" />
			<argument index="0" name="axis" type="Vector3" />
			<argument index="1" name="phi" type="float" />
			<description>
			</description>
		</method>
		<method name="round">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="sign">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="slerp">
			<return type="Vector3" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="weight" type="float" />
			<description>
			</description>
		</method>
		<method name="slide">
			<return type="Vector3" />
			<argument index="0" name="n" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="snapped">
			<return type="Vector3" />
			<argument index="0" name="by" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="to_diagonal_matrix">
			<return type="Basis" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="x" type="float" setter="" getter="" default="0.0">
		</member>
		<member name="y" type="float" setter="" getter="" default="0.0">
		</member>
		<member name="z" type="float" setter="" getter="" default="0.0">
		</member>
	</members>
	<constants>
		<constant name="AXIS_X" value="0">
		</constant>
		<constant name="AXIS_Y" value="1">
		</constant>
		<constant name="AXIS_Z" value="2">
		</constant>
		<constant name="ZERO" value="Vector3( 0, 0, 0 )">
		</constant>
		<constant name="ONE" value="Vector3( 1, 1, 1 )">
		</constant>
		<constant name="INF" value="Vector3( inf, inf, inf )">
		</constant>
		<constant name="LEFT" value="Vector3( -1, 0, 0 )">
		</constant>
		<constant name="RIGHT" value="Vector3( 1, 0, 0 )">
		</constant>
		<constant name="UP" value="Vector3( 0, 1, 0 )">
		</constant>
		<constant name="DOWN" value="Vector3( 0, -1, 0 )">
		</constant>
		<constant name="FORWARD" value="Vector3( 0, 0, -1 )">
		</constant>
		<constant name="BACK" value="Vector3( 0, 0, 1 )">
		</constant>
	</constants>
</class>
