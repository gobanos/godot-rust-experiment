<?xml version="1.0" encoding="UTF-8" ?>
<class name="CanvasItem" inherits="Node" version="3.3">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_draw" qualifiers="virtual">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="draw_arc">
			<return type="void" />
			<argument index="0" name="center" type="Vector2" />
			<argument index="1" name="radius" type="float" />
			<argument index="2" name="start_angle" type="float" />
			<argument index="3" name="end_angle" type="float" />
			<argument index="4" name="point_count" type="int" />
			<argument index="5" name="color" type="Color" />
			<argument index="6" name="width" type="float" default="1.0" />
			<argument index="7" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_char">
			<return type="float" />
			<argument index="0" name="font" type="Font" />
			<argument index="1" name="position" type="Vector2" />
			<argument index="2" name="char" type="String" />
			<argument index="3" name="next" type="String" />
			<argument index="4" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="draw_circle">
			<return type="void" />
			<argument index="0" name="position" type="Vector2" />
			<argument index="1" name="radius" type="float" />
			<argument index="2" name="color" type="Color" />
			<description>
			</description>
		</method>
		<method name="draw_colored_polygon">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="uvs" type="PoolVector2Array" default="PoolVector2Array(  )" />
			<argument index="3" name="texture" type="Texture" default="null" />
			<argument index="4" name="normal_map" type="Texture" default="null" />
			<argument index="5" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_line">
			<return type="void" />
			<argument index="0" name="from" type="Vector2" />
			<argument index="1" name="to" type="Vector2" />
			<argument index="2" name="color" type="Color" />
			<argument index="3" name="width" type="float" default="1.0" />
			<argument index="4" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_mesh">
			<return type="void" />
			<argument index="0" name="mesh" type="Mesh" />
			<argument index="1" name="texture" type="Texture" />
			<argument index="2" name="normal_map" type="Texture" default="null" />
			<argument index="3" name="transform" type="Transform2D" default="Transform2D( 1, 0, 0, 1, 0, 0 )" />
			<argument index="4" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="draw_multiline">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="width" type="float" default="1.0" />
			<argument index="3" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_multiline_colors">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="colors" type="PoolColorArray" />
			<argument index="2" name="width" type="float" default="1.0" />
			<argument index="3" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_multimesh">
			<return type="void" />
			<argument index="0" name="multimesh" type="MultiMesh" />
			<argument index="1" name="texture" type="Texture" />
			<argument index="2" name="normal_map" type="Texture" default="null" />
			<description>
			</description>
		</method>
		<method name="draw_polygon">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="colors" type="PoolColorArray" />
			<argument index="2" name="uvs" type="PoolVector2Array" default="PoolVector2Array(  )" />
			<argument index="3" name="texture" type="Texture" default="null" />
			<argument index="4" name="normal_map" type="Texture" default="null" />
			<argument index="5" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_polyline">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="width" type="float" default="1.0" />
			<argument index="3" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_polyline_colors">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="colors" type="PoolColorArray" />
			<argument index="2" name="width" type="float" default="1.0" />
			<argument index="3" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_primitive">
			<return type="void" />
			<argument index="0" name="points" type="PoolVector2Array" />
			<argument index="1" name="colors" type="PoolColorArray" />
			<argument index="2" name="uvs" type="PoolVector2Array" />
			<argument index="3" name="texture" type="Texture" default="null" />
			<argument index="4" name="width" type="float" default="1.0" />
			<argument index="5" name="normal_map" type="Texture" default="null" />
			<description>
			</description>
		</method>
		<method name="draw_rect">
			<return type="void" />
			<argument index="0" name="rect" type="Rect2" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="filled" type="bool" default="true" />
			<argument index="3" name="width" type="float" default="1.0" />
			<argument index="4" name="antialiased" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="draw_set_transform">
			<return type="void" />
			<argument index="0" name="position" type="Vector2" />
			<argument index="1" name="rotation" type="float" />
			<argument index="2" name="scale" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="draw_set_transform_matrix">
			<return type="void" />
			<argument index="0" name="xform" type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="draw_string">
			<return type="void" />
			<argument index="0" name="font" type="Font" />
			<argument index="1" name="position" type="Vector2" />
			<argument index="2" name="text" type="String" />
			<argument index="3" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="4" name="clip_w" type="int" default="-1" />
			<description>
			</description>
		</method>
		<method name="draw_style_box">
			<return type="void" />
			<argument index="0" name="style_box" type="StyleBox" />
			<argument index="1" name="rect" type="Rect2" />
			<description>
			</description>
		</method>
		<method name="draw_texture">
			<return type="void" />
			<argument index="0" name="texture" type="Texture" />
			<argument index="1" name="position" type="Vector2" />
			<argument index="2" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="3" name="normal_map" type="Texture" default="null" />
			<description>
			</description>
		</method>
		<method name="draw_texture_rect">
			<return type="void" />
			<argument index="0" name="texture" type="Texture" />
			<argument index="1" name="rect" type="Rect2" />
			<argument index="2" name="tile" type="bool" />
			<argument index="3" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="4" name="transpose" type="bool" default="false" />
			<argument index="5" name="normal_map" type="Texture" default="null" />
			<description>
			</description>
		</method>
		<method name="draw_texture_rect_region">
			<return type="void" />
			<argument index="0" name="texture" type="Texture" />
			<argument index="1" name="rect" type="Rect2" />
			<argument index="2" name="src_rect" type="Rect2" />
			<argument index="3" name="modulate" type="Color" default="Color( 1, 1, 1, 1 )" />
			<argument index="4" name="transpose" type="bool" default="false" />
			<argument index="5" name="normal_map" type="Texture" default="null" />
			<argument index="6" name="clip_uv" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="force_update_transform">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="get_canvas" qualifiers="const">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="get_canvas_item" qualifiers="const">
			<return type="RID" />
			<description>
			</description>
		</method>
		<method name="get_canvas_transform" qualifiers="const">
			<return type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="get_global_mouse_position" qualifiers="const">
			<return type="Vector2" />
			<description>
			</description>
		</method>
		<method name="get_global_transform" qualifiers="const">
			<return type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="get_global_transform_with_canvas" qualifiers="const">
			<return type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="get_local_mouse_position" qualifiers="const">
			<return type="Vector2" />
			<description>
			</description>
		</method>
		<method name="get_transform" qualifiers="const">
			<return type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="get_viewport_rect" qualifiers="const">
			<return type="Rect2" />
			<description>
			</description>
		</method>
		<method name="get_viewport_transform" qualifiers="const">
			<return type="Transform2D" />
			<description>
			</description>
		</method>
		<method name="get_world_2d" qualifiers="const">
			<return type="World2D" />
			<description>
			</description>
		</method>
		<method name="hide">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="is_local_transform_notification_enabled" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_set_as_toplevel" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_transform_notification_enabled" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_visible_in_tree" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="make_canvas_position_local" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="screen_point" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="make_input_local" qualifiers="const">
			<return type="InputEvent" />
			<argument index="0" name="event" type="InputEvent" />
			<description>
			</description>
		</method>
		<method name="set_as_toplevel">
			<return type="void" />
			<argument index="0" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_notify_local_transform">
			<return type="void" />
			<argument index="0" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_notify_transform">
			<return type="void" />
			<argument index="0" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="show">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="update">
			<return type="void" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="light_mask" type="int" setter="set_light_mask" getter="get_light_mask" default="1">
		</member>
		<member name="material" type="Material" setter="set_material" getter="get_material">
		</member>
		<member name="modulate" type="Color" setter="set_modulate" getter="get_modulate" default="Color( 1, 1, 1, 1 )">
		</member>
		<member name="self_modulate" type="Color" setter="set_self_modulate" getter="get_self_modulate" default="Color( 1, 1, 1, 1 )">
		</member>
		<member name="show_behind_parent" type="bool" setter="set_draw_behind_parent" getter="is_draw_behind_parent_enabled" default="false">
		</member>
		<member name="show_on_top" type="bool" setter="_set_on_top" getter="_is_on_top">
		</member>
		<member name="use_parent_material" type="bool" setter="set_use_parent_material" getter="get_use_parent_material" default="false">
		</member>
		<member name="visible" type="bool" setter="set_visible" getter="is_visible" default="true">
		</member>
	</members>
	<signals>
		<signal name="draw">
			<description>
			</description>
		</signal>
		<signal name="hide">
			<description>
			</description>
		</signal>
		<signal name="item_rect_changed">
			<description>
			</description>
		</signal>
		<signal name="visibility_changed">
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="BLEND_MODE_MIX" value="0" enum="BlendMode">
		</constant>
		<constant name="BLEND_MODE_ADD" value="1" enum="BlendMode">
		</constant>
		<constant name="BLEND_MODE_SUB" value="2" enum="BlendMode">
		</constant>
		<constant name="BLEND_MODE_MUL" value="3" enum="BlendMode">
		</constant>
		<constant name="BLEND_MODE_PREMULT_ALPHA" value="4" enum="BlendMode">
		</constant>
		<constant name="BLEND_MODE_DISABLED" value="5" enum="BlendMode">
		</constant>
		<constant name="NOTIFICATION_TRANSFORM_CHANGED" value="2000">
		</constant>
		<constant name="NOTIFICATION_DRAW" value="30">
		</constant>
		<constant name="NOTIFICATION_VISIBILITY_CHANGED" value="31">
		</constant>
		<constant name="NOTIFICATION_ENTER_CANVAS" value="32">
		</constant>
		<constant name="NOTIFICATION_EXIT_CANVAS" value="33">
		</constant>
	</constants>
</class>
