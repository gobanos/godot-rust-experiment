<?xml version="1.0" encoding="UTF-8" ?>
<class name="AABB" version="3.3">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="AABB">
			<return type="AABB" />
			<argument index="0" name="position" type="Vector3" />
			<argument index="1" name="size" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="abs">
			<return type="AABB" />
			<description>
			</description>
		</method>
		<method name="encloses">
			<return type="bool" />
			<argument index="0" name="with" type="AABB" />
			<description>
			</description>
		</method>
		<method name="expand">
			<return type="AABB" />
			<argument index="0" name="to_point" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="get_area">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="get_endpoint">
			<return type="Vector3" />
			<argument index="0" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="get_longest_axis">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="get_longest_axis_index">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_longest_axis_size">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="get_shortest_axis">
			<return type="Vector3" />
			<description>
			</description>
		</method>
		<method name="get_shortest_axis_index">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_shortest_axis_size">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="get_support">
			<return type="Vector3" />
			<argument index="0" name="dir" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="grow">
			<return type="AABB" />
			<argument index="0" name="by" type="float" />
			<description>
			</description>
		</method>
		<method name="has_no_area">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="has_no_surface">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="has_point">
			<return type="bool" />
			<argument index="0" name="point" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="intersection">
			<return type="AABB" />
			<argument index="0" name="with" type="AABB" />
			<description>
			</description>
		</method>
		<method name="intersects">
			<return type="bool" />
			<argument index="0" name="with" type="AABB" />
			<description>
			</description>
		</method>
		<method name="intersects_plane">
			<return type="bool" />
			<argument index="0" name="plane" type="Plane" />
			<description>
			</description>
		</method>
		<method name="intersects_segment">
			<return type="bool" />
			<argument index="0" name="from" type="Vector3" />
			<argument index="1" name="to" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="is_equal_approx">
			<return type="bool" />
			<argument index="0" name="aabb" type="AABB" />
			<description>
			</description>
		</method>
		<method name="merge">
			<return type="AABB" />
			<argument index="0" name="with" type="AABB" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="end" type="Vector3" setter="" getter="" default="Vector3( 0, 0, 0 )">
		</member>
		<member name="position" type="Vector3" setter="" getter="" default="Vector3( 0, 0, 0 )">
		</member>
		<member name="size" type="Vector3" setter="" getter="" default="Vector3( 0, 0, 0 )">
		</member>
	</members>
	<constants>
	</constants>
</class>
