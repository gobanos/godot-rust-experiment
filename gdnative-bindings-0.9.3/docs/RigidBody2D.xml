<?xml version="1.0" encoding="UTF-8" ?>
<class name="RigidBody2D" inherits="PhysicsBody2D" version="3.3">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_integrate_forces" qualifiers="virtual">
			<return type="void" />
			<argument index="0" name="state" type="Physics2DDirectBodyState" />
			<description>
			</description>
		</method>
		<method name="add_central_force">
			<return type="void" />
			<argument index="0" name="force" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="add_force">
			<return type="void" />
			<argument index="0" name="offset" type="Vector2" />
			<argument index="1" name="force" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="add_torque">
			<return type="void" />
			<argument index="0" name="torque" type="float" />
			<description>
			</description>
		</method>
		<method name="apply_central_impulse">
			<return type="void" />
			<argument index="0" name="impulse" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="apply_impulse">
			<return type="void" />
			<argument index="0" name="offset" type="Vector2" />
			<argument index="1" name="impulse" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="apply_torque_impulse">
			<return type="void" />
			<argument index="0" name="torque" type="float" />
			<description>
			</description>
		</method>
		<method name="get_colliding_bodies" qualifiers="const">
			<return type="Array" />
			<description>
			</description>
		</method>
		<method name="set_axis_velocity">
			<return type="void" />
			<argument index="0" name="axis_velocity" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="test_motion">
			<return type="bool" />
			<argument index="0" name="motion" type="Vector2" />
			<argument index="1" name="infinite_inertia" type="bool" default="true" />
			<argument index="2" name="margin" type="float" default="0.08" />
			<argument index="3" name="result" type="Physics2DTestMotionResult" default="null" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="angular_damp" type="float" setter="set_angular_damp" getter="get_angular_damp" default="-1.0">
		</member>
		<member name="angular_velocity" type="float" setter="set_angular_velocity" getter="get_angular_velocity" default="0.0">
		</member>
		<member name="applied_force" type="Vector2" setter="set_applied_force" getter="get_applied_force" default="Vector2( 0, 0 )">
		</member>
		<member name="applied_torque" type="float" setter="set_applied_torque" getter="get_applied_torque" default="0.0">
		</member>
		<member name="bounce" type="float" setter="set_bounce" getter="get_bounce">
		</member>
		<member name="can_sleep" type="bool" setter="set_can_sleep" getter="is_able_to_sleep" default="true">
		</member>
		<member name="contact_monitor" type="bool" setter="set_contact_monitor" getter="is_contact_monitor_enabled" default="false">
		</member>
		<member name="contacts_reported" type="int" setter="set_max_contacts_reported" getter="get_max_contacts_reported" default="0">
		</member>
		<member name="continuous_cd" type="int" setter="set_continuous_collision_detection_mode" getter="get_continuous_collision_detection_mode" enum="RigidBody2D.CCDMode" default="0">
		</member>
		<member name="custom_integrator" type="bool" setter="set_use_custom_integrator" getter="is_using_custom_integrator" default="false">
		</member>
		<member name="friction" type="float" setter="set_friction" getter="get_friction">
		</member>
		<member name="gravity_scale" type="float" setter="set_gravity_scale" getter="get_gravity_scale" default="1.0">
		</member>
		<member name="inertia" type="float" setter="set_inertia" getter="get_inertia">
		</member>
		<member name="linear_damp" type="float" setter="set_linear_damp" getter="get_linear_damp" default="-1.0">
		</member>
		<member name="linear_velocity" type="Vector2" setter="set_linear_velocity" getter="get_linear_velocity" default="Vector2( 0, 0 )">
		</member>
		<member name="mass" type="float" setter="set_mass" getter="get_mass" default="1.0">
		</member>
		<member name="mode" type="int" setter="set_mode" getter="get_mode" enum="RigidBody2D.Mode" default="0">
		</member>
		<member name="physics_material_override" type="PhysicsMaterial" setter="set_physics_material_override" getter="get_physics_material_override">
		</member>
		<member name="sleeping" type="bool" setter="set_sleeping" getter="is_sleeping" default="false">
		</member>
		<member name="weight" type="float" setter="set_weight" getter="get_weight" default="9.8">
		</member>
	</members>
	<signals>
		<signal name="body_entered">
			<argument index="0" name="body" type="Node" />
			<description>
			</description>
		</signal>
		<signal name="body_exited">
			<argument index="0" name="body" type="Node" />
			<description>
			</description>
		</signal>
		<signal name="body_shape_entered">
			<argument index="0" name="body_id" type="int" />
			<argument index="1" name="body" type="Node" />
			<argument index="2" name="body_shape" type="int" />
			<argument index="3" name="local_shape" type="int" />
			<description>
			</description>
		</signal>
		<signal name="body_shape_exited">
			<argument index="0" name="body_id" type="int" />
			<argument index="1" name="body" type="Node" />
			<argument index="2" name="body_shape" type="int" />
			<argument index="3" name="local_shape" type="int" />
			<description>
			</description>
		</signal>
		<signal name="sleeping_state_changed">
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="MODE_RIGID" value="0" enum="Mode">
		</constant>
		<constant name="MODE_STATIC" value="1" enum="Mode">
		</constant>
		<constant name="MODE_CHARACTER" value="2" enum="Mode">
		</constant>
		<constant name="MODE_KINEMATIC" value="3" enum="Mode">
		</constant>
		<constant name="CCD_MODE_DISABLED" value="0" enum="CCDMode">
		</constant>
		<constant name="CCD_MODE_CAST_RAY" value="1" enum="CCDMode">
		</constant>
		<constant name="CCD_MODE_CAST_SHAPE" value="2" enum="CCDMode">
		</constant>
	</constants>
</class>
